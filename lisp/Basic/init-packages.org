* Packages
** Download Image
#+BEGIN_SRC emacs-lisp
;;读取本地配置包,必须
 (when (>= emacs-major-version 24)
 (require 'package)
     (package-initialize)
     (setq package-archives '(("gnu"   . "http://elpa.emacs-china.org/gnu/")
		      ("melpa" . "http://elpa.emacs-china.org/melpa/"))))
;; 注意 elpa.emacs-china.org 是 Emacs China 中文社区在国内搭建的一个  ELPA 镜像
;; cl - Common Lisp Extension
(require 'cl)
#+END_SRC

#+RESULTS:
: cl

** Plugins Download
#+BEGIN_SRC emacs-lisp
 ;; Add Packages
 (defvar my/packages '(
		;;--- Auto-completion ---
		use-package
		pos-tip
		fuzzy
		auto-complete
		evil
		company
		hippie-exp
		yasnippet
		;;--- fileOperate ---
		swiper
		helm-ag
		;;--- IDE --- 
		;;js
		js2-mode
		nodejs-repl
		exec-path-from-shell
		js2-refactor
		;;html
		web-mode
		;;C#
		csharp-mode
		;;dos
		powershell
		;;json
		json-mode
		;;yml
		yaml-mode
		;;python
		python-mode
		elpy
		;;lisp
		slime
		;;
		markdown-mode
		;;--- other ---
		smartparens
		hungry-delete
		youdao-dictionary
		monokai-theme
		pallet
		) "Default packages")
 (setq package-selected-packages my/packages)
 (defun my/packages-installed-p () 
     (loop for pkg in my/packages
	   when (not (package-installed-p pkg)) do (return nil)
	   finally (return t)))
(unless (my/packages-installed-p)
     (message "%s" "Refreshing package database...")
     (package-refresh-contents)
     (dolist (pkg my/packages)
       (when (not (package-installed-p pkg))
	 (package-install pkg)))) 

 ;; Find Executable Path on OS X
 (when (memq window-system '(mac ns))
   (exec-path-from-shell-initialize))

#+END_SRC

* Provide
#+BEGIN_SRC emacs-lisp
(provide 'init-packages)
#+END_SRC

* Packages
** Download Image
#+BEGIN_SRC emacs-lisp
;;读取本地配置包,必须
 (when (>= emacs-major-version 24)
     (require 'package)
     (package-initialize)
     (setq package-archives '(("gnu"   . "http://elpa.emacs-china.org/gnu/")
		      ("melpa" . "http://elpa.emacs-china.org/melpa/"))))
;; 注意 elpa.emacs-china.org 是 Emacs China 中文社区在国内搭建的一个  ELPA 镜像
;; cl - Common Lisp Extension
(require 'cl)
#+END_SRC

** Plugins Download
#+BEGIN_SRC emacs-lisp
 ;; Add Packages
 (defvar my/packages '(
		;; --- Auto-completion ---
		evil
		company
		swiper
		helm-ag
		smartparens
		;; --- Major Mode ---
		js2-mode
		nodejs-repl
		exec-path-from-shell
		;; --- Themes ---
		monokai-theme
		;; solarized-theme
		popwin
		) "Default packages")
 (setq package-selected-packages my/packages)
 (defun my/packages-installed-p () 
     (loop for pkg in my/packages
	   when (not (package-installed-p pkg)) do (return nil)
	   finally (return t)))
 (unless (my/packages-installed-p)
     (message "%s" "Refreshing package database...")
     (package-refresh-contents)
     (dolist (pkg my/packages)
       (when (not (package-installed-p pkg))
	 (package-install pkg))))
 ;; Find Executable Path on OS X
 (when (memq window-system '(mac ns))
   (exec-path-from-shell-initialize))
#+END_SRC

** Plugins Settings
*** evil
#+BEGIN_SRC emacs-lisp

#+END_SRC
*** swiper
#+BEGIN_SRC emacs-lisp
;;swiper
(ivy-mode 1)
(setq ivy-use-virtual-buffers t)
#+END_SRC
*** Popwin
#+BEGIN_SRC emacs-lisp
;;popwin配置
(require 'popwin)
(popwin-mode t)
#+END_SRC
** Model
*** evil
#+BEGIN_SRC emacs-lisp
(evil-mode 1)
#+END_SRC
*** Programming
#+BEGIN_SRC emacs-lisp
;;smartparens
(smartparens-global-mode t)
;;设置自动补齐
(global-company-mode t)
#+END_SRC
*** File open model
#+BEGIN_SRC emacs-lisp
;;设置js文件打开配置
(setq auto-mode-alist
      (append
       '(("\\.js\\'" . js2-mode))
       auto-mode-alist))
#+END_SRC
*** window-numbering
;;M-0,9 to jump the window
#+BEGIN_SRC emacs-lisp
(require 'window-numbering)
(window-numbering-mode 1)
#+END_SRC
** Theme
#+BEGIN_SRC emacs-lisp
;;加载主题
(load-theme 'monokai t)
#+END_SRC
* Provide
#+BEGIN_SRC emacs-lisp
(provide 'init-packages)
#+END_SRC
